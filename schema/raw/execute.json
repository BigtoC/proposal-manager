{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "description": "Creates a proposal.",
      "type": "object",
      "required": [
        "create_proposal"
      ],
      "properties": {
        "create_proposal": {
          "type": "object",
          "required": [
            "gift",
            "receiver"
          ],
          "properties": {
            "gift": {
              "description": "The amount of coins that will be sent to the partner as a gift, can be empty.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coin"
              }
            },
            "receiver": {
              "description": "The receiver's address that will receive the proposal",
              "type": "string"
            },
            "speech": {
              "description": "The proposal's speech.",
              "type": [
                "string",
                "null"
              ]
            },
            "title": {
              "description": "The proposal's title.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Cancels a proposal.",
      "type": "object",
      "required": [
        "cancel_proposal"
      ],
      "properties": {
        "cancel_proposal": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "The proposal's ID.",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Say yes to a proposal.",
      "type": "object",
      "required": [
        "yes"
      ],
      "properties": {
        "yes": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "The proposal's ID.",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "reply": {
              "description": "why you say yes",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Say no to a proposal.",
      "type": "object",
      "required": [
        "no"
      ],
      "properties": {
        "no": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "The proposal's ID.",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "reply": {
              "description": "why you say no",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "update contract config Only the owner can execute this message.",
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "owner": {
              "description": "The new owner address.",
              "type": [
                "string",
                "null"
              ]
            },
            "successful_proposal_fee": {
              "description": "The new fee that the owner will receive for each successful proposal",
              "anyOf": [
                {
                  "$ref": "#/definitions/Coin"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
