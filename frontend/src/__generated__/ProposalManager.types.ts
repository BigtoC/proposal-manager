/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.12.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export interface InstantiateMsg {
  owner?: string | null;
  successful_proposal_fee: Coin;
}
export interface Coin {
  amount: Uint128;
  denom: string;
}
export type ExecuteMsg = {
  create_proposal: {
    gift: Coin[];
    receiver: string;
    speech?: string | null;
    title?: string | null;
  };
} | {
  cancel_proposal: {
    id: number;
  };
} | {
  yes: {
    id: number;
    reply?: string | null;
  };
} | {
  no: {
    id: number;
    reply?: string | null;
  };
} | {
  update_config: {
    successful_proposal_fee?: Coin | null;
  };
} | {
  update_ownership: Action;
};
export type Action = {
  transfer_ownership: {
    expiry?: Expiration | null;
    new_owner: string;
  };
} | "accept_ownership" | "renounce_ownership";
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type QueryMsg = {
  config: {};
} | {
  proposal: {
    id: number;
  };
} | {
  proposals: {
    filter_by?: ProposalBy | null;
    limit?: number | null;
    sort?: Order | null;
    status?: ProposalStatus | null;
  };
} | {
  status: {};
} | {
  ownership: {};
};
export type ProposalBy = {
  proposer: string;
} | {
  receiver: string;
};
export type Order = "ascending" | "descending";
export type ProposalStatus = "pending" | "yes" | "no";
export interface Config {
  successful_proposal_fee: Coin;
}
export interface OwnershipForString {
  owner?: string | null;
  pending_expiry?: Expiration | null;
  pending_owner?: string | null;
}
export type Addr = string;
export interface Proposal {
  created_at: number;
  fee: Coin;
  gift: Coin[];
  id: number;
  proposer: Addr;
  receiver: Addr;
  replied_at?: number | null;
  reply?: string | null;
  speech?: string | null;
  status: ProposalStatus;
  title?: string | null;
}
export interface ProposalsResponse {
  proposals: Proposal[];
}
export interface Status {
  total_proposals: number;
  total_proposals_cancelled: number;
  total_proposals_no: number;
  total_proposals_pending: number;
  total_proposals_yes: number;
}